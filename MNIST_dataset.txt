from sklearn.datasets import fetch_openml
from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import classification_report, confusion_matrix
import matplotlib.pyplot as plt

# Load MNIST dataset
x, y = fetch_openml('mnist_784', version=1, as_frame=False, return_X_y=True)

# Normalize pixel values to [0, 1] and convert labels to integers
x, y = x / 255.0, y.astype(int)

# Train-test split
xtr, xte, ytr, yte = train_test_split(x, y, test_size=0.2, random_state=42)

# Binary classification: 0 vs 1
btr = (ytr < 2)
bte = (yte < 2)
m1 = LogisticRegression(max_iter=1000).fit(xtr[btr], ytr[btr])
print("Binary Classification Report (0 vs 1):")
print(classification_report(yte[bte], m1.predict(xte[bte])))

# Multiclass classification: 0â€“9
m2 = LogisticRegression(max_iter=1000, multi_class='ovr').fit(xtr, ytr)
print("\nMulticlass Classification Report:")
yp = m2.predict(xte)
print(classification_report(yte, yp))

# Confusion matrix visualization
plt.imshow(confusion_matrix(yte, yp), cmap="Blues")
plt.title("Confusion Matrix")
plt.xlabel("Predicted")
plt.ylabel("True")
plt.colorbar()
plt.show()
